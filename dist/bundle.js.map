{"version":3,"sources":["../useGet.js"],"names":[],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;AAEA,cAAc,CAAC,SAAf,CAAyB,UAAzB,GAAsC,UAAtC;;AAEe,SAAS,MAAT,CAAgB,GAAhB,EAAqB,OAArB,EAA8B;AAAA,kBAE5B,qBAAS,IAAI,cAAJ,EAAT,CAF4B;AAAA;AAAA,MAEpC,GAFoC;;AAAA,mBAGhB,qBAAS,IAAT,CAHgB;AAAA;AAAA,MAGpC,KAHoC;AAAA,MAG7B,QAH6B;;AAAA,mBAIpB,qBAAS,IAAT,CAJoB;AAAA;AAAA,MAIpC,GAJoC;AAAA,MAI/B,MAJ+B;;AAM5C,MAAM,GAAG,GAAG,SAAN,GAAM,CAAC,MAAD;AAAA,WAAY,QAAQ,CAAC,OAAO,CAAC,MAAD,CAAR,CAApB;AAAA,GAAZ;;AAEA,wBAAU;AAAA,WAAM,GAAG,CAAC,MAAJ,GAAa;AAAA,aAAM,MAAM,CAAC,GAAG,CAAC,QAAL,CAAZ;AAAA,KAAnB;AAAA,GAAV,EAAyD,EAAzD;AAEA,wBAAU,YAAM;AACf,QAAI,KAAJ,EAAW;AACV,MAAA,GAAG,CAAC,IAAJ,CAAS,KAAT,EAAgB,GAAG,GAAG,KAAtB,EAA6B,IAA7B;AACA,MAAA,GAAG,CAAC,UAAJ,CAAe,OAAf;AACA,MAAA,GAAG,CAAC,IAAJ;AACA;AACD,GAND,EAMG,CAAE,KAAF,CANH;AAQA,SAAO,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAP;AACA;;AAED,SAAS,OAAT,CAAiB,MAAjB,EAAyB;AACxB,MAAI,KAAK,GAAG,GAAZ;;AAEA,OAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AACvB,IAAA,KAAK,IAAI,GAAG,GAAG,GAAN,GAAY,MAAM,CAAE,GAAF,CAAlB,GAA4B,GAArC;AACA;;AACD,SAAO,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,KAAK,CAAC,MAAN,GAAe,CAA9B,CAAP;AACA;;AAED,SAAS,UAAT,CAAoB,OAApB,EAA6B;AAC5B,OAAK,IAAI,MAAT,IAAmB,OAAnB;AACC,SAAK,gBAAL,CAAsB,MAAtB,EAA8B,OAAO,CAAE,MAAF,CAArC;AADD;AAEA","file":"bundle.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nXMLHttpRequest.prototype.setHeaders = setHeaders;\r\n\r\nexport default function useGet(url, headers) {\r\n\r\n\tconst [ req ] = useState(new XMLHttpRequest());\r\n\tconst [ query, setQuery ] = useState(null);\r\n\tconst [ res, setRes ] = useState(\"[]\");\r\n\r\n\tconst get = (params) => setQuery(toQuery(params));\r\n\r\n\tuseEffect(() => req.onload = () => setRes(req.response), []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query) {\r\n\t\t\treq.open(\"GET\", url + query, true);\r\n\t\t\treq.setHeaders(headers);\r\n\t\t\treq.send();\r\n\t\t}\r\n\t}, [ query ]);\r\n\r\n\treturn [ res, get, req ];\r\n}\r\n\r\nfunction toQuery(params) {\r\n\tlet query = '?';\r\n\r\n\tfor (let key in params) {\r\n\t\tquery += key + '=' + params[ key ] + '&';\r\n\t}\r\n\treturn query.slice(0, query.length - 1);\r\n}\r\n\r\nfunction setHeaders(headers) {\r\n\tfor (let header in headers)\r\n\t\tthis.setRequestHeader(header, headers[ header ]);\r\n}"]}